language: go

go:
- 1.14.x

deploy:
  provider: releases
  api_key: $GTOKEN
  file: 
    - vorteil_windows-x86.zip
    - vorteil_linux-x86.tar.gz
    - vorteil_darwin-x86.tar.gz
  skip_cleanup: true
  draft: true
  on:
    tags: true

jobs:
  include:
    - stage: test
      script: scripts/test.sh
    - stage: build
      os: linux
      script:
        - scripts/build.sh
        - zip vorteil_windows-x86.zip vorteil.exe && rm vorteil.exe
        - tar -zcvf vorteil_linux-x86.tar.gz vorteil && rm vorteil
    - stage: build
      os: osx
      script:
        - export KEY_CHAIN=build.keychain
        - export CERTIFICATE_P12=certificate.p12
        - echo $OSX_DEVELOPER_ID_P12 | base64 --decode > $CERTIFICATE_P12
        - security create-keychain -p travis $KEY_CHAIN
        - security default-keychain -s $KEY_CHAIN
        - security unlock-keychain -p travis $KEY_CHAIN
        - security import $CERTIFICATE_P12 -k $KEY_CHAIN -P $OSX_DEVELOPER_ID_PW -T /usr/bin/codesign
        - |-
          security set-key-partition-list -S apple-tool:,apple: -s -k travis $KEY_CHAIN
        - rm -fr *.p12
        - scripts/build.sh
        - codesign -s $OSX_APP_SIGN_ID -v --timestamp --options runtime vorteil
        - xcrun altool --notarize-app  --file $(pwd)/vorteil --username $OSX_NOTARIZE_USERNAME --primary-bundle-id com.vorteil.cli -p $OSX_NOTARIZE_PW
        - for ((i=1;i<=30;i+=1)); do xcrun stapler staple $(pwd)/vorteil; if [ $? = 65 ]; then echo "Waiting for notarization to complete..." && sleep 10; fi; done
        - tar -zcvf vorteil_darwin-x86.tar.gz vorteil && rm vorteil
